name: Vert.x
logo: https://upload.wikimedia.org/wikipedia/commons/3/3d/Vertx_logo.png
blip:
  - date: 2018-03-20
    ring: TRIAL
  - date: 2021-03-04
    ring: ADOPT
description: |
  Eclipse Vert.x is a polyglot event-driven application framework that runs on the
  Java Virtual Machine.

  Vert.x contains several different components designed to make it easier for
  you to write reactive applications in a range of different languages.
  It is a compelling approach to writing microservices, as it guides you towards
  a more functional thinking when writing code. There is also very little "magic"
  in the code - it is easy to read the source when familiar with the syntax.
  In some sense it also encourage you to write code by "composition over inheritance".
  Small components tends to be much easier to test, and the loosely coupled nature
  of Vert.x (Actor model) makes everything highly testable.

  Also it very well supports IDEALS, which is aimed for in HiiRetail services.

  As of version 4.0.3, Vert.x exposes its API in Java, JavaScript, Groovy, Ruby,
  Scala and Kotlin.
rationale: |
  Vert.x is a very effective, highly performant framework where focus is on writing
  small isolated classes that communicate via a shared bus; EventBus.
  Being an unopinionated toolkit, the developer is free to do whatever fits the
  current requirement, with the set of tools Vert.x provide. A large set of modules
  brings even more functionality where needed.

  A powerful abstraction in Vert.x is that a single application or a whole cluster
  of applications is fully seamless -- everything is treated as a cluster.
  Verticles form a cluster within an application - applications form a cluster in a network.

  The (great) tools that Vert.x provide, and the extraordinary performance it shows
  makes it a highly suitable tool that we should consider building our microservices with.
license:
  open-source:
    name: Apache-2.0
    link: https://github.com/eclipse-vertx/vert.x/blob/master/LICENSE.md
tags:
  - java
