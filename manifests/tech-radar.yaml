kind: Namespace
apiVersion: v1
metadata:
  name: tech-radar
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tech-radar
  namespace: tech-radar
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tech-radar
  template:
    metadata:
      labels:
        app: tech-radar
    spec:
      containers:
        - name: master
          image: eu.gcr.io/jenkins-162516/tech-radar
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 2
            failureThreshold: 5
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 448Mi
---
kind: Service
apiVersion: v1
metadata:
  name: tech-radar-ui
  namespace: tech-radar
spec:
  type: NodePort
  selector:
    app: tech-radar
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: tech-radar
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: tech-radar
  namespace: tech-radar
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tech-radar
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: tech-radar
  namespace: tech-radar
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "tech-radar"
spec:
  backend:
    serviceName: tech-radar-ui
    servicePort: 80