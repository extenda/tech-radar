name: Commit

on: push

env:
  GCLOUD_VERSION: '282.0.0'
  GCP_PROJECT: tech-radar-b545

jobs:
  yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./.scripts/python_requirements.txt

      - name: Yaml Lint
        run: python .scripts/yaml_lint.py

      - name: Verify schema
        run: python .scripts/yaml_validate.py

  test:
    runs-on: ubuntu-latest
    needs:
      - yamllint
    steps:
      - uses: actions/checkout@v1

      - uses: extenda/actions/gcp-secret-manager@v0
        with:
          service-account-key: ${{ secrets.SECRET_AUTH }}
          secrets: |
            SONAR_TOKEN: sonarcloud-token

      - name: NPM install
        run: npm ci

      - name: Lint javascript
        run: |
          npm run lint:js -- \
            --format junit \
            --output-file test-results/eslint/TEST-eslint.xml

      - name: Unit tests
        run: npm test -- --ci --coverage

      - name: Build radar
        run: npm run build

      - name: SonarCloud Scan
        uses: extenda/actions/sonar-scanner@v0
        with:
          sonar-host: https://sonarcloud.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs:
      - yamllint
      - test
    steps:
      - uses: actions/checkout@v1

      - name: Create release
        uses: extenda/actions/conventional-release@v0
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: NPM install
        run: npm ci

      - name: Build radar
        run: |
          npm version ${{ steps.release.outputs.version }} --no-git-tag-version
          npm run build

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: ${{ env.GCLOUD_VERSION }}
          service_account_key: ${{ secrets.GCLOUD_AUTH }}

      - name: Publish Docker image
        run: |
          gcloud auth configure-docker
          IMAGE=gcr.io/$GCP_PROJECT/tech-radar:v${{ steps.release.outputs.version }}
          docker build -t $IMAGE .
          docker push $IMAGE

  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
      - uses: actions/checkout@v1

      - uses: extenda/actions/conventional-version@v0
        id: semver

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: ${{ env.GCLOUD_VERSION }}
          service_account_key: ${{ secrets.GCLOUD_AUTH }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy tech-radar \
            --image=gcr.io/$GCP_PROJECT/tech-radar:${{ steps.semver.outputs.release-tag }} \
            --service-account=cloudrun-runtime@$GCP_PROJECT.iam.gserviceaccount.com \
            --platform=managed \
            --region=europe-west1 \
            --project=$GCP_PROJECT \
            --memory=256Mi \
            --allow-unauthenticated

      - name: Notify Slack
        run: |
          curl -XPOST -H "Authorization: token ${{ github.token }}" \
            https://slack.github.com/repos/${{ github.repository }} -d '[{
            "title": "Extenda Retail Tech Radar ${{ steps.semver.outputs.release-tag }} :rocket:",
            "text": "A new version of tech-radar has been deployed. See the latest changes at https://tech-radar.extendaretail.com",
            "fallback": "A new version of tech-radar has been deployed."
          }]'
